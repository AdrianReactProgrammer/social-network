{"version":3,"file":"static/js/514.4301f056.chunk.js","mappings":"gKACA,GAAgB,UAAY,yBAAyB,YAAc,2BAA2B,MAAQ,qBAAqB,WAAa,0BAA0B,eAAiB,8BAA8B,aAAe,4BAA4B,WAAa,0BAA0B,cAAgB,8B,mBC6CnT,EA1Cc,SAACA,GAEX,OACI,gBAAKC,UAAWC,EAAAA,QAAU,UACtB,SAAC,KAAM,CACHC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACN,IAAMC,EAAS,CAAC,EAahB,OAZKD,EAAOH,MAGP,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMdG,EAAOF,SAEDE,EAAOH,MAAMM,OAAS,KAC7BF,EAAOH,SAAW,wBAFlBG,EAAOH,SAAW,WAIfG,CACX,EACAG,SAAU,SAACJ,EAAO,GAAwB,IAArBK,EAAa,EAAbA,cACjBZ,EAAMa,MAAMN,GACZK,GAAc,EAClB,EAAE,SAED,gBAAGE,EAAY,EAAZA,aAAY,OACZ,UAAC,KAAI,YACD,SAAC,KAAK,CAACC,KAAM,QAASC,KAAM,QAASC,YAAa,QAAShB,UAAWC,EAAAA,SACtE,SAAC,KAAY,CAACa,KAAM,QAASG,UAAW,MAAOjB,UAAWC,EAAAA,cAC1D,SAAC,KAAK,CAACa,KAAM,WAAYC,KAAM,QAASC,YAAa,WAAYhB,UAAWC,EAAAA,SAC5E,SAAC,KAAY,CAACa,KAAM,WAAYG,UAAW,MAAOjB,UAAWC,EAAAA,iBAC7D,SAAC,KAAK,CAACa,KAAM,aAAcC,KAAM,WAAYf,UAAWC,EAAAA,cAAgB,iBAAMD,UAAWC,EAAAA,eAAiB,0BAC1G,mBAAQc,KAAM,SAAUG,SAAUL,EAAcb,UAAWC,EAAAA,YAAc,qBACtE,KAK3B,EChCA,EAVe,SAACF,GAEZ,OACI,4BACI,8CACA,mBAAQC,UAAWC,EAAAA,aAAgBkB,QAAS,WAAOpB,EAAMqB,QAAQ,EAAE,sBAG/E,E,UCKA,EAVkB,SAACrB,GACf,OACI,iBAAKC,UAAWC,EAAAA,UAAY,WACxB,mCACA,SAACoB,EAAA,EAAS,CAACC,WAAYvB,EAAMuB,aAC5BvB,EAAMwB,QAAS,SAAC,EAAM,CAACH,OAAQrB,EAAMqB,UAAa,SAAC,EAAK,CAACR,MAAOb,EAAMa,MAAOY,qBAAsBzB,EAAMyB,yBAGtH,E,UCDA,GAF2BC,EAAAA,EAAAA,KANhB,SAACC,GAAK,MAAM,CACnBH,OAAQG,EAAMC,SAASJ,OACvBD,WAAYI,EAAMC,SAASL,WAC3BE,qBAAsBE,EAAMC,SAASH,qBACxC,GAEwC,CAACZ,MAAAA,EAAAA,GAAOQ,OAAAA,EAAAA,IAAtBK,CAA+BG,E","sources":["webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","components/Login/Logout.jsx","components/Login/LoginPage.jsx","components/Login/LoginPageContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"Login_loginPage__0EjPV\",\"loginButton\":\"Login_loginButton__+rdlh\",\"input\":\"Login_input__L2rQ8\",\"rememberMe\":\"Login_rememberMe__q0bEo\",\"rememberMeSpan\":\"Login_rememberMeSpan__SpJcE\",\"logoutButton\":\"Login_logoutButton__oLrXZ\",\"emailError\":\"Login_emailError__OpePv\",\"passwordError\":\"Login_passwordError__i2Bcw\"};","import { Field, Form, Formik, ErrorMessage } from 'formik'\r\nimport n from './Login.module.css'\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n\r\n    return (\r\n        <div className={n.formDiv}>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.email) {\r\n                        errors.email = 'required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = 'invalid email address';\r\n                    }\r\n                    if (!values.password) {\r\n                        errors.password = 'required'\r\n                    } else if (values.email.length < 10) {\r\n                        errors.password = 'symbols minimum - 10'\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    props.login(values)\r\n                    setSubmitting(false)\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field name={'email'} type={'input'} placeholder={'Email'} className={n.input} />\r\n                        <ErrorMessage name={'email'} component={'div'} className={n.emailError} />\r\n                        <Field name={'password'} type={'input'} placeholder={'Password'} className={n.input} />\r\n                        <ErrorMessage name={'password'} component={'div'} className={n.passwordError} />\r\n                        <Field name={'rememberMe'} type={'checkbox'} className={n.rememberMe} /><span className={n.rememberMeSpan}>Remember me</span>\r\n                        <button type={'submit'} disabled={isSubmitting} className={n.loginButton} >login</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import n from './Login.module.css'\r\n\r\nconst Logout = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>You are login!</span>\r\n            <button className={n.logoutButton} onClick={() => {props.logout()}} >LOGOUT</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import n from './Login.module.css'\r\nimport Login from './Login';\r\nimport Logout from './Logout';\r\nimport Preloader from '../../commons/preloader/Preloader';\r\n\r\nconst LoginPage = (props) => {\r\n    return (\r\n        <div className={n.loginPage}>\r\n            <h1>Login</h1>\r\n            <Preloader isFetching={props.isFetching} />\r\n            {props.isAuth ? <Logout logout={props.logout} /> : <Login login={props.login} redirectingToProfile={props.redirectingToProfile} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n\r\n","import { connect } from 'react-redux';\r\nimport LoginPage from './LoginPage';\r\nimport { login, logout } from './../../redux/userAuth-reducer';\r\n\r\nlet mstp = (state) => ({\r\n    isAuth: state.userAuth.isAuth,\r\n    isFetching: state.userAuth.isFetching,\r\n    redirectingToProfile: state.userAuth.redirectingToProfile\r\n})\r\n\r\nconst LoginPageContainer = connect(mstp, {login, logout})(LoginPage)\r\n\r\nexport default LoginPageContainer"],"names":["props","className","n","initialValues","email","password","validate","values","errors","test","length","onSubmit","setSubmitting","login","isSubmitting","name","type","placeholder","component","disabled","onClick","logout","Preloader","isFetching","isAuth","redirectingToProfile","connect","state","userAuth","LoginPage"],"sourceRoot":""}